/*
 * ListarNPdesconocidos.java
 *
 * Created on 10 de abril de 2006, 10:49
 */

package nombrespropios;
import javax.swing.*;
import java.util.*;
import java.io.*;


/**
 *
 * @author  Victor del Canto
 */
public class ListarNPdesconocidos extends javax.swing.JFrame {

    public static DefaultListModel lsdes=new DefaultListModel();
    public static EditorNP jlistdesc= new EditorNP();
    /** Creates new form ListarNPdesconocidos */
    public ListarNPdesconocidos() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        Cerrar = new javax.swing.JButton();
        Añadir = new javax.swing.JButton();
        AñadirExcep = new javax.swing.JButton();
        Error = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LISTA DE NOMBRES PROPIOS DESCONOCIDOS");
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(4450, 2200));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(450, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(275, 200));
        jList1.setModel(lsdes);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 25;
        gridBagConstraints.gridheight = 12;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.ipady = 60;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        Cerrar.setText("Cerrar");
        Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CerrarMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.insets = new java.awt.Insets(10, 2, 3, 6);
        getContentPane().add(Cerrar, gridBagConstraints);

        Añadir.setText("A\u00f1adir a NP Conocidos");
        Añadir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AñadirMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 2, 2);
        getContentPane().add(Añadir, gridBagConstraints);

        AñadirExcep.setText("A\u00f1adir a Excepciones");
        AñadirExcep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AñadirExcepMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.insets = new java.awt.Insets(10, 2, 2, 2);
        getContentPane().add(AñadirExcep, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 10;
        getContentPane().add(Error, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-450)/2, (screenSize.height-350)/2, 450, 350);
    }
    // </editor-fold>//GEN-END:initComponents

    private void AñadirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AñadirMouseClicked
        int indic=jList1.getSelectedIndex();    //Existe un elemento
        if (indic!=-1){                     // de JList seleccionado
                //Se añade al conjunto Conocidos
                jlistdesc.añadirSet(jlistdesc.ListaConocidos,jList1.getSelectedValue().toString());
                //Se quita el elemento del conjunto Desconocidos
                jlistdesc.quitarSet(jlistdesc.ListaDesconocidos,jList1.getSelectedValue().toString());
                //Se borra el elemento de la JList
                lsdes.removeElementAt(indic);
        }
    }//GEN-LAST:event_AñadirMouseClicked

    private void AñadirExcepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AñadirExcepMouseClicked
        int indic=jList1.getSelectedIndex();   //Existe un elemento 
        if (indic!=-1){                        //de la JList seleccionado      
            // Se añade al conjunto Excepciones
            jlistdesc.añadirSet(jlistdesc.ListaExcepciones,jList1.getSelectedValue().toString());
            // Se quita el elemento del conjunto Desconocidos
            jlistdesc.quitarSet(jlistdesc.ListaDesconocidos,jList1.getSelectedValue().toString());
            // Se borra el elemento de la JList
            lsdes.removeElementAt(indic);
        }
    }//GEN-LAST:event_AñadirExcepMouseClicked

    private void CerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerrarMouseClicked
//Por si se han añadido elementos del conjunto Desconocidos a Conocidos o Excepciones
        try {
            BufferedWriter outexc= new BufferedWriter(new FileWriter("Excepciones.txt"));
            outexc.write(jlistdesc.ListaExcepciones.toString());    //guarda los elementos del conjunto Excepciones
            outexc.close();         //en el fichero Excepciones.txt
            BufferedWriter outcon= new BufferedWriter(new FileWriter("Conocidos.txt"));
            outcon.write(jlistdesc.ListaConocidos.toString());      //guarda los elementos dl conjunto Conocidos 
            outcon.close();         //en el fichero Conocidos.txt   
        }catch (IOException e){
        }
        lsdes.clear();   //borra el contenido de la JList
        this.dispose();     //cierra y
        this.setVisible(false);     //oculta la ventana
    }//GEN-LAST:event_CerrarMouseClicked
    
    
    public static void creaJLIST() {
//Pone los elementos que estan en el texto y no son del conjunto Conocidos ni Excepciones en un JList
        Iterator c=jlistdesc.ListaDesconocidos.iterator();
        while (c.hasNext()==true) {
            Object palabra=c.next();
            if (jlistdesc.lista.contains(palabra)==true) {
                lsdes.addElement(palabra);
            }
        }               

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                creaJLIST();
                new ListarNPdesconocidos().setVisible(true);

            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Añadir;
    private javax.swing.JButton AñadirExcep;
    private javax.swing.JButton Cerrar;
    private javax.swing.JLabel Error;
    public static javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
